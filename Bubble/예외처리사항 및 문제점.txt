
[만들어야 할 목표]
	1. 플레이어 Enter도어 상태

	2. 플레이어 Attack

	3, 나중에 몬스터 생성은 스포너 방식으로 만들자

	


------------------------------------------------------

[예외처리 해야할 목록 및 고민사항]

	1. PlayerState_Damaged는 아직 충돌처리가 완성되지 않아서
	FSM이동이 연결되어 있지 않음
	충돌이 완성되면 추후 처리할 것

	2. 플레이어의 키 생성은 BubbleCore에서 만들자

	(4. PlayerState의 함수인자를 GameEngineRender의 애니메이션 인자 전달 방식으로 바꾸자)

	5. Non-Attack을 Attack이 상속하고 
			그 상태에서 실제 이동이 일어나지 않는 경우엔 부모의 함수를 이용하자

------------------------------------------------------

[Attack상태]
문제점 Attack의 애니메이션이
	Idle_Attack, Jump_Attack, Falling_Attack, 뭔지모르겠는 Attack으로 총 4가지 존재함(Move_Attack?)

	1.렌더링만 On한 상태에서 내부적으로 플레이어 이동,점프, 추락, 대기를 처리한다
		그러기엔 Attack에서 처리해야 할 부분이 너무 많아 보인다

	2.다른 FSM에서 렌더링만 Attack애니메이션으로 바꾸고 Attack FSM은 빠르게 갔다오기만 한다
		그러면 Attack애니메이션은 언제 끝낼건 지 알기 힘들다

	3. Attack에 따른 4가지 상태를 다 만든다
		무식하지만 간단하다.
		대신 FSM을 연결하기에는 많은 노다가가 필요해보인다

	4. PlayerBase에 IsAttack 이라는 값을 둔다, 이 값이 true라면 렌더링을 따로 고정시킨다

	5. 어차피 크게 티도 안나는거 Attack애니메이션을 하나만 쓴다
		그래도 내부적으로 처리해야 하는 부분이 너무 크다

[State의 Render 문제]
	State당 1개의 Render를 가지고 있다
	(1개의 Render당 2개의 애니메이션)
	이는 Player가 하나의 Render만 가지고 있고
	State가 변경될 때 마다 애니메이션만 변경하는 방식으로 처리 가능

	렌더는 PlayerState 컴포넌트가 하나만 들고 있어야 한다.
	(StageNext의 경우에만 별도로 하나 더 들고 있을수 있게해야한다)
		근데 꼭 그럴 필요가 있을까?
		물론 하나의 렌더러만 쓰는게 효율적이긴 해도
		이제와서 바꿔도 순회 덜 하는거 밖에 없음
		그래도 바꾸는게 나을려나?
