
[만들어야 할 목표]
	2. 플레이어 Attack

	3, 나중에 몬스터 생성은 스포너 방식으로 만들자?

	


------------------------------------------------------

[예외처리 해야할 목록 및 고민사항]

	1. PlayerState_Damaged는 아직 충돌처리가 완성되지 않아서
	FSM이동이 연결되어 있지 않음
	충돌이 완성되면 추후 처리할 것

	5. Non-Attack을 Attack이 상속하고 
			그 상태에서 실제 이동이 일어나지 않는 경우엔 부모의 함수를 이용하자

------------------------------------------------------

[Attack상태]
문제점 Attack의 애니메이션이
	Idle_Attack, Jump_Attack, Falling_Attack, 뭔지모르겠는 Attack으로 총 4가지 존재함(Move_Attack?)

	1.렌더링만 On한 상태에서 내부적으로 플레이어 이동,점프, 추락, 대기를 처리한다
		그러기엔 Attack에서 처리해야 할 부분이 너무 많아 보인다

	2.다른 FSM에서 렌더링만 Attack애니메이션으로 바꾸고 Attack FSM은 빠르게 갔다오기만 한다
		그러면 Attack애니메이션은 언제 끝낼건 지 알기 힘들다

	3. Attack에 따른 4가지 상태를 다 만든다
		무식하지만 간단하다.
		대신 FSM을 연결하기에는 많은 노다가가 필요해보인다

	4. PlayerBase에 IsAttack 이라는 값을 둔다, 이 값이 true라면 렌더링을 따로 고정시킨다

	5. 어차피 크게 티도 안나는거 Attack애니메이션을 하나만 쓴다
		그래도 내부적으로 처리해야 하는 부분이 너무 크다


[버블 연쇄 터짐]
		(StageCollision처럼 이미지에 그릴수 있다면 가능할지도)
		픽셀로 BFS?
	터트린 버블의 픽셀을 큐에 담고
	Collision의 스케일 크기만큼 BFS (반지름X)
		만약 어떤 버블의 위치값이 발견된다면 충돌 여부를 확인하고 그 버블을 큐에 넣는다
그러면 발견은 어떻게 할까?
	스포너에 있는 버블들을 Map으로 관리해서 위치값을 빠르게 찾을수 있도록 바꿀까?

아니면 시간복잡도를 좀 더 계산해봐서
	엔진의 기능을 최대한 활용해볼까?

1.	충돌한 버블들을 큐에 모두 넣음
	상태는 Pop으로 만든다
	모든 버블들을 GetActors로 가져옴
	큐에 있는 Pop버블들과 벡터에 있는 Idle버블이 충돌했는지 비교하고
	충돌했다면 Pop으로 만든후에 큐에 넣음
	logN + N^2가 될 것 같다

2. 모든 픽셀을 의미하는 2차원 배열을 정의한다
	거기에 현재 버블의 위치들을 기록
	플레이어와 버블이 충돌했을때
		A*를 이용하여서 연쇄폭발 처리
			A*를 사용하면 2차원 배열로 기록할 필요 있는지 알아보자

	서로간의 길이가 다르니까 다익스트라는 가능할까?

[버블 이동]
	idle버블은 항상 위로만 움직이는것이 아니라
	특정 위치를 거쳐서 올라간다
	버블들끼리의 충돌은
		이전 WinAPI RigidBody를 참고할까?
			-> 그러면 Gravity 컴포넌트가 아니라 RigidBody컴포넌트로 다시 만들까?